/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ChangelogPage = {
  _id: string;
  _type: "changelogPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  changelogHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
};

export type ChangelogItem = {
  _id: string;
  _type: "changelogItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  releaseDate?: string;
  service?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "catalogItem";
  };
  tags?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "tag";
  }>;
  slug?: Slug;
  log?: Array<{
    contentType?: "image" | "mdx";
    entryName?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    mdx?: string;
    _type: "log";
    _key: string;
  }>;
  githubUrls?: Array<string>;
  releaseNotesMDX?: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }>;
};

export type FaqsPage = {
  _id: string;
  _type: "faqsPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  faqsHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  faqsSections?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faqsSection";
  }>;
};

export type FaqsSection = {
  _id: string;
  _type: "faqsSection";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  sectionTitle?: string;
  faqItems?: Array<{
    question?: string;
    answer?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }>;
    _key: string;
  }>;
};

export type LegalPage = {
  _id: string;
  _type: "legalPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  legalHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  href?: string;
  icon?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    asIconButton?: boolean;
    _type: "image";
  };
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  ogImageData?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "pageOGImageData";
  };
};

export type Career = {
  _id: string;
  _type: "career";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  jobOpenings?: {
    heroImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    title?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    actions?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "action";
    }>;
  };
  careersHeroData?: {
    careersHeader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "header";
    };
    heroImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
};

export type Timeline = {
  _id: string;
  _type: "timeline";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  date?: string;
  dateTime?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type About = {
  _id: string;
  _type: "about";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  aboutHeroData?: {
    header?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "header";
    };
    heroImage?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
  };
  roadmapData?: {
    header?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "header";
    };
    timeline?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "timeline";
    }>;
  };
};

export type Values = {
  _id: string;
  _type: "values";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  icon?: string;
};

export type Benefits = {
  _id: string;
  _type: "benefits";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  icon?: string;
};

export type SocialLink = {
  _id: string;
  _type: "socialLink";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  href?: string;
  external?: boolean;
  icon?: string;
};

export type Organization = {
  _id: string;
  _type: "organization";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  alias?: string;
  website?: string;
  logo?: {
    default?: {
      src?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      alt?: string;
    };
    organization?: {
      light?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      lightAlt?: string;
      dark?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      darkAlt?: string;
    };
    poweredBy?: {
      light?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      lightAlt?: string;
      dark?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
      };
      darkAlt?: string;
    };
  };
  info?: {
    moto?: string;
    mission?: string;
    insight?: string;
    vision?: {
      heading?: string;
      title?: string;
      highlightText?: string;
      titleSuffix?: string;
      quote?: string;
      quoteHighlightText?: string;
      quoteSuffix?: string;
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
    };
    values?: {
      heading?: string;
      title?: string;
      highlightText?: string;
      titleSuffix?: string;
      description?: string;
      values?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "values";
      }>;
    };
    benefits?: {
      heading?: string;
      title?: string;
      description?: string;
      benefits?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "benefits";
      }>;
    };
  };
  team?: {
    heading?: string;
    founder?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "person";
    };
    leaders?: {
      title?: string;
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      people?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "person";
      }>;
    };
    members?: {
      title?: string;
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      people?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "person";
      }>;
    };
  };
  social?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "socialLink";
  }>;
};

export type Person = {
  _id: string;
  _type: "person";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  role?: string;
  href?: string;
  organizationName?: string;
  socialHandle?: string;
  handleHref?: string;
  avatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  funFact?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type CatalogItem = {
  _id: string;
  _type: "catalogItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  href?: string;
  comingSoon?: boolean;
  actions?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "action";
  }>;
  itemType?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  longDescription?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  iconImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    asIconButton?: boolean;
    _type: "image";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    mobileHeroView?: boolean;
    _type: "image";
  };
  featuresHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  features?: Array<{
    name?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    icon?: string;
    _key: string;
  }>;
  replaces?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type Solution = {
  _id: string;
  _type: "solution";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  href?: string;
  comingSoon?: boolean;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  longDescription?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  iconImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    asIconButton?: boolean;
    _type: "image";
  };
  heroHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  previewImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  featuresHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  featuresImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    mobileHeroView?: boolean;
    _type: "image";
  };
  features?: Array<{
    name?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _key: string;
  }>;
  statsHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  statsImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  stats?: Array<{
    name?: string;
    value?: string;
    _key: string;
  }>;
  testimonial?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "testimonial";
  };
};

export type TechnologyPage = {
  _id: string;
  _type: "technologyPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  technologyHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  featuresHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  featuresImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  features?: Array<{
    name?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    };
    _key: string;
  }>;
  techStackHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  technology?: Array<{
    name?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    icon?: string;
    _key: string;
  }>;
};

export type CustomerPage = {
  _id: string;
  _type: "customerPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  customersHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  customers?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "customer";
  }>;
};

export type Customer = {
  _id: string;
  _type: "customer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  website?: string;
  linkedPost?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  quote?: string;
};

export type ServicesPage = {
  _id: string;
  _type: "servicesPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  servicesHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  catalogItems?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "catalogItem";
  }>;
};

export type SplashPage = {
  _id: string;
  _type: "splashPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  heroHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  partnersTitle?: string;
  partnersLogos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  featuresHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  featuresImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  features?: Array<{
    name?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    icon?: string;
    _key: string;
  }>;
  solutionsHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  solutions?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "solution";
  }>;
  tweetCardHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  tweetId?: string;
  startupProgramsTitle?: string;
  startupProgramsLogos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  testimonialsHeader?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "header";
  };
  featuredTestimonial?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "testimonial";
  };
  testimonialCol1?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  testimonialCol2?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  testimonialCol3?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
  testimonialCol4?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  quote?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  authorName?: string;
  authorRole?: string;
  authorAvatar?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  socialHandle?: string;
  handleHref?: string;
  organizationName?: string;
  organizationLogo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  customerStory?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  type?: "Blog Post" | "Customer Story";
  title?: string;
  slug?: Slug;
  description?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  date?: string;
  datetime?: string;
  authorName?: string;
  authorImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  renderMDX?: string;
  otherDetails?: Array<{
    name?: string;
    description?: string;
    _key: string;
  }>;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Action = {
  _id: string;
  _type: "action";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  href?: string;
  icon?: string;
  primary?: boolean;
  external?: boolean;
  iconLeft?: string;
  iconRight?: string;
};

export type FooterLink = {
  _id: string;
  _type: "footerLink";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  name?: string;
  href?: string;
  external?: boolean;
};

export type FooterData = {
  _id: string;
  _type: "footerData";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  columns?: Array<{
    name?: string;
    links?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "footerLink";
    }>;
    _key: string;
  }>;
};

export type Navbar = {
  _id: string;
  _type: "navbar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  solutions?: {
    name?: string;
    href?: string;
    flyoutData?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "solution";
    }>;
    flyoutActions?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "action";
    }>;
  };
  catalogItems?: {
    name?: string;
    href?: string;
    flyoutData?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "catalogItem";
    }>;
    flyoutActions?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "action";
    }>;
  };
  company?: {
    name?: string;
    href?: string;
    flyoutData?: Array<{
      name?: string;
      href?: string;
      description?: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }>;
      image?: {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        asIconButton?: boolean;
        _type: "image";
      };
      _key: string;
    }>;
    flyoutActions?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "action";
    }>;
  };
  customers?: {
    name?: string;
    href?: string;
  };
  technology?: {
    name?: string;
    href?: string;
  };
  navActions?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "action";
  }>;
  mobileNavActions?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "action";
  }>;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  heading?: string;
  title?: string;
  highlightText?: string;
  titleSuffix?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  actions?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "action";
  }>;
};

export type Tag = {
  _id: string;
  _type: "tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
};

export type PageOGImageData = {
  _id: string;
  _type: "pageOGImageData";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  pageName?: "splash" | "solutions" | "services" | "products" | "about" | "careers" | "customers" | "customer" | "technology" | "changelog" | "faqs" | "legal";
  templateType?: "default" | "featured";
  title?: string;
  highlightText?: string;
  titleSuffix?: string;
  tagline?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Markdown = string;

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | ChangelogPage | ChangelogItem | FaqsPage | FaqsSection | LegalPage | Career | Timeline | About | Values | Benefits | SocialLink | Organization | Person | CatalogItem | Solution | TechnologyPage | CustomerPage | Customer | ServicesPage | SplashPage | Testimonial | Post | Slug | Action | FooterLink | FooterData | Navbar | Header | Tag | PageOGImageData | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Markdown;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/lib/queries/about.ts
// Variable: ABOUT_DATA_QUERY
// Query:   *[_type == "about" && entryName == "Memorang"]{    entryName,    aboutHeroData{      ...header->{        heading,        title,        highlightText,        titleSuffix,        description,        actions[]->{          name,          href,          icon,          primary,          external,          iconLeft,          iconRight,        },      },      heroImage{        "src": asset->url,        "alt": alt,      },    },    roadmapData{      ...header->{        heading,        title,        highlightText,        titleSuffix,        description,        actions[]->{          name,          href,          icon,          primary,          external,          iconLeft,          iconRight,        },      },      timeline[]->{         name,        date,        dateTime,        description,      },    },  }
export type ABOUT_DATA_QUERYResult = Array<{
  entryName: string | null;
  aboutHeroData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | null;
  roadmapData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    timeline: Array<{
      name: string | null;
      date: string | null;
      dateTime: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    timeline: Array<{
      name: string | null;
      date: string | null;
      dateTime: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | null;
}>;
// Source: ./src/sanity/lib/queries/catalog.ts
// Variable: SERVICES_PAGE_QUERY
// Query: *[_type == "servicesPage" && entryName == "Services Page"]{  "heroData": {    ...servicesHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight,      },    },    "heroImage": heroImage{      "src": asset->url,      "alt": alt,    },  },}
export type SERVICES_PAGE_QUERYResult = Array<{
  heroData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  };
}>;
// Variable: CATALOG_ITEM_WITH_HREF_QUERY
// Query: *[_type == "catalogItem" && href == $href]{  "heroData": {      "title": name,      "description": longDescription,      "logo": {        "src": iconImage.asset->url,        "alt": name,      },      "heroImage": heroImage{        "src": asset->url,        "alt": alt,      },       actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight,      },      "otherItemsLogos": replaces[]{        "src": asset->url,        "alt": alt,      },      "mobileHeroView": heroImage.mobileHeroView,  },    comingSoon,  "featuresData": {    ...featuresHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight,      },    },    features[]{      name,      description,      icon    }  },}
export type CATALOG_ITEM_WITH_HREF_QUERYResult = Array<{
  heroData: {
    title: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    logo: {
      src: string | null;
      alt: string | null;
    };
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    otherItemsLogos: Array<{
      src: string | null;
      alt: string | null;
    }> | null;
    mobileHeroView: boolean | null;
  };
  comingSoon: boolean | null;
  featuresData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  } | {
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  };
}>;
// Variable: CATALOG_ITEMS_WITHOUT_HREF_QUERY
// Query: *[_type == "catalogItem" && href != $href]{    "id": _id,    "title": name,    description,    "logo": {        "src": iconImage.asset->url,        "alt": name,      },    href,  }
export type CATALOG_ITEMS_WITHOUT_HREF_QUERYResult = Array<{
  id: string;
  title: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  logo: {
    src: string | null;
    alt: string | null;
  };
  href: string | null;
}>;
// Variable: EXPLORE_CATALOG_HEADER_QUERY
// Query: *[_type == "header" && entryName == "Explore Catalog"]{    heading,    title,    highlightText,    titleSuffix,    description,    actions[]->{      name,      href,      icon,      primary,      external,      iconLeft,      iconRight,    },  }
export type EXPLORE_CATALOG_HEADER_QUERYResult = Array<{
  heading: string | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
}>;
// Variable: ALL_CATALOG_ITEMS_QUERY
// Query: *[_type == "catalogItem"]{    "id": _id,    itemType,    name,    description,		longDescription,    "heroImage": heroImage{      "src": asset->url,      "alt": alt,    },    href,    "logo": {        "src": iconImage.asset->url,        "alt": name,    },    replaces[]{        "src": asset->url,        "alt": alt,    },    comingSoon,}
export type ALL_CATALOG_ITEMS_QUERYResult = Array<{
  id: string;
  itemType: string | null;
  name: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  longDescription: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  heroImage: {
    src: string | null;
    alt: string | null;
  } | null;
  href: string | null;
  logo: {
    src: string | null;
    alt: string | null;
  };
  replaces: Array<{
    src: string | null;
    alt: string | null;
  }> | null;
  comingSoon: boolean | null;
}>;
// Source: ./src/sanity/lib/queries/changelog.ts
// Variable: CHANGELOG_PAGE_QUERY
// Query: *[_type == "changelogPage"]{  ...changelogHeader -> {  heading,  title,  highlightText,  titleSuffix,  description,  actions[] {    name,    href,    primary,    external,    icon,    iconRight,    iconLeft,  },  },  isWorkInProgress,}
export type CHANGELOG_PAGE_QUERYResult = Array<{
  heading: string | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: null;
    href: null;
    primary: null;
    external: null;
    icon: null;
    iconRight: null;
    iconLeft: null;
  }> | null;
  isWorkInProgress: boolean | null;
} | {
  isWorkInProgress: boolean | null;
}>;
// Variable: GET_CHANGELOG_ITEM_BY_SLUG_AND_DATE_QUERY
// Query:   *[_type == "changelogItem" && slug.current == $slug && releaseDate == $date] {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type GET_CHANGELOG_ITEM_BY_SLUG_AND_DATE_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: GET_CHANGELOG_ITEMS_BY_SERVICE_QUERY
// Query:   *[_type == "changelogItem"     && lower(service->name) == $service] | order(releaseDate desc) [$start...$end] {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type GET_CHANGELOG_ITEMS_BY_SERVICE_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: GET_CHANGELOG_ITEMS_BY_TAGS_QUERY
// Query:   *[_type == "changelogItem"     && count(tags[lower(@->name) in $tags]) == length($tags)] | order(releaseDate desc) [$start...$end] {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type GET_CHANGELOG_ITEMS_BY_TAGS_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: GET_CHANGELOG_ITEMS_BY_SERVICE_AND_TAGS_QUERY
// Query:   *[_type == "changelogItem"     && lower(service->name) == $service       && count(tags[lower(@->name) in $tags]) == length($tags)] | order(releaseDate desc) [$start...$end] {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type GET_CHANGELOG_ITEMS_BY_SERVICE_AND_TAGS_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: ALL_CHANGELOG_ITEMS_QUERY
// Query: *[_type == "changelogItem"] | order(releaseDate desc) {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type ALL_CHANGELOG_ITEMS_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: CHANGELOG_ITEMS_PAGE_VIEW_QUERY
// Query: *[_type == "changelogItem"] | order(releaseDate desc) [$start...$end] {  "id": _id,  entryName,  isWorkInProgress,  releaseDate,  "service": service->{      name,      href,      },  "tags": tags[]->name,  "slug": slug.current,  "log": log[]{    contentType,    entryName,    mdx,    "image": image{      "src": asset->url,      alt,    }  },  githubUrls,  releaseNotesMDX,}
export type CHANGELOG_ITEMS_PAGE_VIEW_QUERYResult = Array<{
  id: string;
  entryName: string | null;
  isWorkInProgress: boolean | null;
  releaseDate: string | null;
  service: {
    name: string | null;
    href: string | null;
  } | null;
  tags: Array<string | null> | null;
  slug: string | null;
  log: Array<{
    contentType: "image" | "mdx" | null;
    entryName: string | null;
    mdx: string | null;
    image: {
      src: string | null;
      alt: string | null;
    } | null;
  }> | null;
  githubUrls: Array<string> | null;
  releaseNotesMDX: Array<{
    name?: string;
    description?: string;
    _type: "releaseNote";
    _key: string;
  }> | null;
}>;
// Variable: CHANGELOG_ITEMS_COUNT_QUERY
// Query: count(*[_type == "changelogItem"])
export type CHANGELOG_ITEMS_COUNT_QUERYResult = number;
// Variable: CHANGELOG_ITEMS_BY_SERVICE_COUNT_QUERY
// Query: count(*[_type == "changelogItem" && lower(service->name) == $service])
export type CHANGELOG_ITEMS_BY_SERVICE_COUNT_QUERYResult = number;
// Variable: CHANGELOG_ITEMS_BY_TAGS_COUNT_QUERY
// Query: count(*[_type == "changelogItem" && count(tags[lower(@->name) in $tags]) == length($tags)])
export type CHANGELOG_ITEMS_BY_TAGS_COUNT_QUERYResult = number;
// Variable: CHANGELOG_ITEMS_BY_SERVICE_AND_TAGS_COUNT_QUERY
// Query: count(*[_type == "changelogItem" && lower(service->name) == $service && count(tags[lower(@->name) in $tags]) == length($tags)])
export type CHANGELOG_ITEMS_BY_SERVICE_AND_TAGS_COUNT_QUERYResult = number;
// Variable: ALL_TAGS_QUERY
// Query: *[_type == "tag"].name
export type ALL_TAGS_QUERYResult = Array<string | null>;
// Source: ./src/sanity/lib/queries/customers.ts
// Variable: CUSTOMERS_PAGE_QUERY
// Query: *[_type == "customerPage"]{    "heroData": {        ...customersHeader->{            title,            highlightText,            titleSuffix,            heading,            description,            actions[]->{                name,                href,                icon,                primary,                external,                iconLeft            }        },        "heroImage": {            "src": heroImage.asset->url,            "alt": heroImage.alt        },    },    customers[]->{        ...,        "logo": {            "src": logo.asset->url,            "alt": logo.alt        },        "storySlug": linkedPost->slug.current,        "storyWIP": linkedPost->isWorkInProgress,    }}
export type CUSTOMERS_PAGE_QUERYResult = Array<{
  heroData: {
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    heading: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    };
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    };
  };
  customers: Array<{
    _id: string;
    _type: "customer";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    entryName?: string;
    name?: string;
    logo: {
      src: string | null;
      alt: string | null;
    };
    website?: string;
    linkedPost?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    quote?: string;
    storySlug: string | null;
    storyWIP: boolean | null;
  }> | null;
}>;
// Variable: CUSTOMER_STORY_BY_SLUG_QUERY
// Query: *[_type == "post" && type == "Customer Story" && slug.current == $slug]{    type,    title,    "slug": slug.current,    isWorkInProgress,    description,    "imageUrl": heroImage.asset->url,    date,    datetime,    "author": {        "name": authorName,        "imageUrl": authorImage.asset->url    },    renderMDX,    otherDetails[]{        name,        description,    }}
export type CUSTOMER_STORY_BY_SLUG_QUERYResult = Array<{
  type: "Blog Post" | "Customer Story" | null;
  title: string | null;
  slug: string | null;
  isWorkInProgress: boolean | null;
  description: string | null;
  imageUrl: string | null;
  date: string | null;
  datetime: string | null;
  author: {
    name: string | null;
    imageUrl: string | null;
  };
  renderMDX: string | null;
  otherDetails: Array<{
    name: string | null;
    description: string | null;
  }> | null;
}>;
// Variable: ALL_CUSTOMER_STORIES_QUERY
// Query: *[_type == "post" && type == "Customer Story"]{    id,    type,    title,    "slug": slug.current,    description,    "imageUrl": heroImage.asset->url,    date,    datetime,    "author": {        "name": authorName,        "imageUrl": authorImage.asset->url      },    renderMDX,    otherDetails[]{        name,        description,    }  }
export type ALL_CUSTOMER_STORIES_QUERYResult = Array<{
  id: null;
  type: "Blog Post" | "Customer Story" | null;
  title: string | null;
  slug: string | null;
  description: string | null;
  imageUrl: string | null;
  date: string | null;
  datetime: string | null;
  author: {
    name: string | null;
    imageUrl: string | null;
  };
  renderMDX: string | null;
  otherDetails: Array<{
    name: string | null;
    description: string | null;
  }> | null;
}>;
// Source: ./src/sanity/lib/queries/faqs.ts
// Variable: FAQS_PAGE_QUERY
// Query: *[_type == "faqsPage"]{  isWorkInProgress,  ...faqsHeader->{    heading,    title,    highlightText,    titleSuffix,    description,    actions[] {      name,      href,      primary,      external,      icon,      iconRight,      iconLeft,    },  },  "faqsSections": faqsSections[]->{    sectionTitle,    faqItems[] {      question,      answer,    },  }}
export type FAQS_PAGE_QUERYResult = Array<{
  isWorkInProgress: boolean | null;
  heading: string | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: null;
    href: null;
    primary: null;
    external: null;
    icon: null;
    iconRight: null;
    iconLeft: null;
  }> | null;
  faqsSections: Array<{
    sectionTitle: string | null;
    faqItems: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
    }> | null;
  }> | null;
} | {
  isWorkInProgress: boolean | null;
  faqsSections: Array<{
    sectionTitle: string | null;
    faqItems: Array<{
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
    }> | null;
  }> | null;
}>;
// Source: ./src/sanity/lib/queries/layout.ts
// Variable: CTA_QUERY
// Query: *[_type == "header" && entryName == "CTA"]{    title,    highlightText,    titleSuffix,    description,    actions[]->{      name,      href,      icon,      primary,      external,      iconLeft,      iconRight,    },  }
export type CTA_QUERYResult = Array<{
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
}>;
// Variable: NAVBAR_QUERY
// Query: *[_type == "navbar" && entryName == "Navbar"]{  "navItems": [    {      "id": "1",      "name": solutions.name,      "href": solutions.href,      "flyoutData": solutions.flyoutData[]->{        "id": _id,        "name": name,        "href": href,        "image": iconImage.asset->url,        "imageAsIconButton": iconImage.asIconButton,        "description": description,      }    },    {      "id": "2",      "name": catalogItems.name,      "href": catalogItems.href,      "flyoutData": catalogItems.flyoutData[]->{        "id": _id,        "name": name,        "href": href,        "image": iconImage.asset->url,        "imageAsIconButton": iconImage.asIconButton,        "description": description,      },      "flyoutActions": catalogItems.flyoutActions[]->{        "name": name,        "href": href,        "icon": icon,      }    },    {      "id": "5",      "name": company.name,      "href": company.href,      "flyoutData": company.flyoutData[]{        "id": _id,        "name": name,        "href": href,        "image": image.asset->url,        "imageAsIconButton": image.asIconButton,        "description": description,      }    },    {      "id": "6",      "name": customers.name,      "href": customers.href,    },    {      "id": "7",      "name": technology.name,      "href": technology.href,    }  ],  "navActions": navActions[]->{    "name": name,    "href": href,    "icon": icon,    "primary": primary,    "external": external,    "iconLeft": iconLeft,    "iconRight": iconRight,  },  "mobileNavActions": mobileNavActions[]->{    "name": name,    "href": href,    "icon": icon,    "primary": primary,    "external": external,    "iconLeft": iconLeft,    "iconRight": iconRight,  }}
export type NAVBAR_QUERYResult = Array<{
  navItems: Array<{
    id: "2";
    name: string | null;
    href: string | null;
    flyoutData: Array<{
      id: string;
      name: string | null;
      href: string | null;
      image: string | null;
      imageAsIconButton: boolean | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
    flyoutActions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
    }> | null;
  } | {
    id: "5";
    name: string | null;
    href: string | null;
    flyoutData: Array<{
      id: null;
      name: string | null;
      href: string | null;
      image: string | null;
      imageAsIconButton: boolean | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    id: "1";
    name: string | null;
    href: string | null;
    flyoutData: Array<{
      id: string;
      name: string | null;
      href: string | null;
      image: string | null;
      imageAsIconButton: boolean | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    }> | null;
  } | {
    id: "6";
    name: string | null;
    href: string | null;
  } | {
    id: "7";
    name: string | null;
    href: string | null;
  }>;
  navActions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
  mobileNavActions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
}>;
// Variable: SUBNAV_SOLUTIONS_QUERY
// Query:   *[_type == "navbar" && entryName == "Navbar"]{    "solutions": solutions.flyoutData[]->{      "name": name,      "href": href,      "image": iconImage.asset->url,      "imageAsIconButton": iconImage.asIconButton,    }}
export type SUBNAV_SOLUTIONS_QUERYResult = Array<{
  solutions: Array<{
    name: string | null;
    href: string | null;
    image: string | null;
    imageAsIconButton: boolean | null;
  }> | null;
}>;
// Variable: SUBNAV_CATALOGITEMS_QUERY
// Query:   *[_type == "navbar" && entryName == "Navbar"]{    "catalogItems": catalogItems.flyoutData[]->{      "name": name,      "href": href,      "image": iconImage.asset->url,      "imageAsIconButton": iconImage.asIconButton,    }  }
export type SUBNAV_CATALOGITEMS_QUERYResult = Array<{
  catalogItems: Array<{
    name: string | null;
    href: string | null;
    image: string | null;
    imageAsIconButton: boolean | null;
  }> | null;
}>;
// Variable: GET_ORG_DATA
// Query: *[_type == "organization"]{  name,  info {    moto,    mission,    insight,    vision {      heading,      title,      highlightText,      titleSuffix,      quote,      quoteHighlightText,      quoteSuffix,      description    },    values {      heading,      title,      description,      values[]-> {        name,        description,        icon,        iconForeground,        iconBackground      }    },    benefits {      heading,      title,      description,      benefits[]-> {        name,        description,        icon      }    }  },  team {    heading,    founder-> {      name,      role,      href,      organizationName,      socialHandle,      handleHref,      "imageUrl": avatar.asset->url,      funFact,    },    leaders {      title,      description,      people[]-> {        name,        role,        href,        organizationName,        socialHandle,        handleHref,        "imageUrl": avatar.asset->url,        funFact,      }    },    members {      title,      description,      people[]-> {        name,        role,        href,        organizationName,        socialHandle,        handleHref,        "imageUrl": avatar.asset->url,        funFact,      }    }  },}
export type GET_ORG_DATAResult = Array<{
  name: string | null;
  info: {
    moto: string | null;
    mission: string | null;
    insight: string | null;
    vision: {
      heading: string | null;
      title: string | null;
      highlightText: string | null;
      titleSuffix: string | null;
      quote: string | null;
      quoteHighlightText: string | null;
      quoteSuffix: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    } | null;
    values: {
      heading: string | null;
      title: string | null;
      description: string | null;
      values: Array<{
        name: string | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        icon: string | null;
        iconForeground: null;
        iconBackground: null;
      }> | null;
    } | null;
    benefits: {
      heading: string | null;
      title: string | null;
      description: string | null;
      benefits: Array<{
        name: string | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        icon: string | null;
      }> | null;
    } | null;
  } | null;
  team: {
    heading: string | null;
    founder: {
      name: string | null;
      role: string | null;
      href: string | null;
      organizationName: string | null;
      socialHandle: string | null;
      handleHref: string | null;
      imageUrl: string | null;
      funFact: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    } | null;
    leaders: {
      title: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      people: Array<{
        name: string | null;
        role: string | null;
        href: string | null;
        organizationName: string | null;
        socialHandle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        funFact: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }> | null;
    } | null;
    members: {
      title: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      people: Array<{
        name: string | null;
        role: string | null;
        href: string | null;
        organizationName: string | null;
        socialHandle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        funFact: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
      }> | null;
    } | null;
  } | null;
}>;
// Variable: GET_CAREER_DATA
// Query: *[_type == "career"]{  ...,  jobOpenings {    ...,    "heroImage": {      "src": heroImage.asset->url,      alt,    },    actions[] -> {      ...,    }  },  careersHeroData {    ...,    ...careersHeader->{    heading,     title,     highlightText,     titleSuffix,     description,     actions[]->{      name,       href,       icon,       primary,       external,       iconLeft,       iconRight    }    },    "heroImage": {      "src": heroImage.asset->url,      alt,    },  }}
export type GET_CAREER_DATAResult = Array<{
  _id: string;
  _type: "career";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  jobOpenings: {
    heroImage: {
      src: string | null;
      alt: null;
    };
    title?: string;
    description?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }>;
    actions: Array<{
      _id: string;
      _type: "action";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      entryName?: string;
      name?: string;
      href?: string;
      icon?: string;
      primary?: boolean;
      external?: boolean;
      iconLeft?: string;
      iconRight?: string;
    }> | null;
  } | null;
  careersHeroData: {
    careersHeader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "header";
    };
    heroImage: {
      src: string | null;
      alt: null;
    };
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
  } | {
    careersHeader?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "header";
    };
    heroImage: {
      src: string | null;
      alt: null;
    };
  } | null;
}>;
// Variable: GET_FOOTER_LINKS
// Query: *[_type == "footerData" && entryName == "Memorang Footer"][0]{  entryName,  columns[]{    name,    "links": links[]->{      name,      href,      external    }  }}
export type GET_FOOTER_LINKSResult = {
  entryName: string | null;
  columns: Array<{
    name: string | null;
    links: Array<{
      name: string | null;
      href: string | null;
      external: boolean | null;
    }> | null;
  }> | null;
} | null;
// Variable: GET_FOOTER_DATA
// Query: *[_type == "organization" && entryName == "Memorang"]{  entryName,  name,  website,  alias,  logo {    default {      "src": src.asset->url,      alt    },    organization {      "light": {        "src": light.asset->url,        "alt": lightAlt,      },      "dark": {        "src": dark.asset->url,        "alt": lightAlt,      },    },    poweredBy {      "light": {        "src": light.asset->url,        "alt": lightAlt,      },      "dark": {        "src": dark.asset->url,        "alt": lightAlt,      },    }  },  info {    moto,    mission,    insight,    vision {      heading,      title,      description    },    values {      heading,      title,      description,      values[]-> {        name,        description,        icon,        iconForeground,        iconBackground      }    },    benefits {      heading,      title,      description,      benefits[]-> {        name,        description,        icon      }    }  },     team {     founder-> {       name,       role,       href,       organizationName,       socialHandle,       handleHref,       "avatar": avatar.asset->url     },     leaders {       title,       description,       people[]-> {         name,         role,         href,         organizationName,         socialHandle,         handleHref,         "avatar": avatar.asset->url       }     },     members {       title,       description,       people[]-> {         name,         role,         href,         organizationName,         socialHandle,         handleHref,         "avatar": avatar.asset->url       }     }   },  social[]-> {    name,    href,    external,    icon  }}
export type GET_FOOTER_DATAResult = Array<{
  entryName: string | null;
  name: string | null;
  website: string | null;
  alias: string | null;
  logo: {
    default: {
      src: string | null;
      alt: string | null;
    } | null;
    organization: {
      light: {
        src: string | null;
        alt: string | null;
      };
      dark: {
        src: string | null;
        alt: string | null;
      };
    } | null;
    poweredBy: {
      light: {
        src: string | null;
        alt: string | null;
      };
      dark: {
        src: string | null;
        alt: string | null;
      };
    } | null;
  } | null;
  info: {
    moto: string | null;
    mission: string | null;
    insight: string | null;
    vision: {
      heading: string | null;
      title: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
    } | null;
    values: {
      heading: string | null;
      title: string | null;
      description: string | null;
      values: Array<{
        name: string | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        icon: string | null;
        iconForeground: null;
        iconBackground: null;
      }> | null;
    } | null;
    benefits: {
      heading: string | null;
      title: string | null;
      description: string | null;
      benefits: Array<{
        name: string | null;
        description: Array<{
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }> | null;
        icon: string | null;
      }> | null;
    } | null;
  } | null;
  team: {
    founder: {
      name: string | null;
      role: string | null;
      href: string | null;
      organizationName: string | null;
      socialHandle: string | null;
      handleHref: string | null;
      avatar: string | null;
    } | null;
    leaders: {
      title: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      people: Array<{
        name: string | null;
        role: string | null;
        href: string | null;
        organizationName: string | null;
        socialHandle: string | null;
        handleHref: string | null;
        avatar: string | null;
      }> | null;
    } | null;
    members: {
      title: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      people: Array<{
        name: string | null;
        role: string | null;
        href: string | null;
        organizationName: string | null;
        socialHandle: string | null;
        handleHref: string | null;
        avatar: string | null;
      }> | null;
    } | null;
  } | null;
  social: Array<{
    name: string | null;
    href: string | null;
    external: boolean | null;
    icon: string | null;
  }> | null;
}>;
// Source: ./src/sanity/lib/queries/legal.ts
// Variable: ALL_LEGAL_PAGES_QUERY
// Query: *[_type == "legalPage"]{    "id": _id,    ...legalHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight,      },    },    name,    href,    icon,    "image": image.asset->url,    "imageAsIconButton": image.asIconButton,    "renderMarkdown": content,}
export type ALL_LEGAL_PAGES_QUERYResult = Array<{
  id: string;
  heading: string | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
  name: string | null;
  href: string | null;
  icon: string | null;
  image: string | null;
  imageAsIconButton: boolean | null;
  renderMarkdown: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
} | {
  id: string;
  name: string | null;
  href: string | null;
  icon: string | null;
  image: string | null;
  imageAsIconButton: boolean | null;
  renderMarkdown: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
}>;
// Variable: LEGAL_PAGE_WITH_HREF_QUERY
// Query: *[_type == "legalPage" && href == $href]{    "id": _id,    ...legalHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight,      },    },    name,    href,    icon,    "image": image.asset->url,    "imageAsIconButton": image.asIconButton,    "renderMarkdown":content,    ogImageData->{      pageName,      templateType,      title,      highlightText,      titleSuffix,      tagline,      "image": image.asset->url,      "icon": icon.asset->url,    }}
export type LEGAL_PAGE_WITH_HREF_QUERYResult = Array<{
  id: string;
  heading: string | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  actions: Array<{
    name: string | null;
    href: string | null;
    icon: string | null;
    primary: boolean | null;
    external: boolean | null;
    iconLeft: string | null;
    iconRight: string | null;
  }> | null;
  name: string | null;
  href: string | null;
  icon: string | null;
  image: string | null;
  imageAsIconButton: boolean | null;
  renderMarkdown: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  ogImageData: {
    pageName: "about" | "careers" | "changelog" | "customer" | "customers" | "faqs" | "legal" | "products" | "services" | "solutions" | "splash" | "technology" | null;
    templateType: "default" | "featured" | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    tagline: string | null;
    image: string | null;
    icon: string | null;
  } | null;
} | {
  id: string;
  name: string | null;
  href: string | null;
  icon: string | null;
  image: string | null;
  imageAsIconButton: boolean | null;
  renderMarkdown: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  ogImageData: {
    pageName: "about" | "careers" | "changelog" | "customer" | "customers" | "faqs" | "legal" | "products" | "services" | "solutions" | "splash" | "technology" | null;
    templateType: "default" | "featured" | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    tagline: string | null;
    image: string | null;
    icon: string | null;
  } | null;
}>;
// Source: ./src/sanity/lib/queries/metadata.ts
// Variable: PAGE_OG_IMAGE_QUERY
// Query: *[_type == "pageOGImageData" && pageName == $pageName] {  pageName,  templateType,  title,  highlightText,  titleSuffix,  tagline,  "image": image.asset->url,  "icon": icon.asset->url,}
export type PAGE_OG_IMAGE_QUERYResult = Array<{
  pageName: "about" | "careers" | "changelog" | "customer" | "customers" | "faqs" | "legal" | "products" | "services" | "solutions" | "splash" | "technology" | null;
  templateType: "default" | "featured" | null;
  title: string | null;
  highlightText: string | null;
  titleSuffix: string | null;
  tagline: string | null;
  image: string | null;
  icon: string | null;
}>;
// Source: ./src/sanity/lib/queries/solution.ts
// Variable: ALL_SOLUTIONS_QUERY
// Query: *[_type == "solution"]{    "id": _id,    name,    href,    description,	longDescription,    "icon": iconImage{        "src": asset->url,        "alt": alt,        "asIconButton": asIconButton,    },    "heroImage": previewImage{        "src": asset->url,        "alt": alt,    },    comingSoon,}
export type ALL_SOLUTIONS_QUERYResult = Array<{
  id: string;
  name: string | null;
  href: string | null;
  description: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }> | null;
  longDescription: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }> | null;
  icon: {
    src: string | null;
    alt: string | null;
    asIconButton: boolean | null;
  } | null;
  heroImage: {
    src: string | null;
    alt: string | null;
  } | null;
  comingSoon: boolean | null;
}>;
// Variable: SOLUTION_WITH_HREF_QUERY
// Query: *[_type == "solution" && href == $href]{    "id": _id,    name,    href,    comingSoon,    "heroData": {        ...heroHeader->{            heading,             title,             highlightText,             titleSuffix,             description,             actions[]->{                name,                 href,                 icon,                 primary,                 external,                 iconLeft,                 iconRight            },        },        "heroImage": heroImage{            "src": asset->url,            "alt": alt,        },     },    "featuresData": {        ...featuresHeader->{            heading,            title,            highlightText,            titleSuffix,            description,            actions[]->{                name,                href,                icon,                primary,                external,                iconLeft,                iconRight            },        },        "heroImage": featuresImage{            "src": asset->url,            "alt": alt,        },         "mobileHeroView": featuresImage.mobileHeroView,        features[]{            name,            description,            "iconUrl": icon.asset->url,        },    },    "statsData": {        ...statsHeader->{            heading,            title,            highlightText,            titleSuffix,            description,            actions[]->{                name,                href,                icon,                primary,                external,                iconLeft,                iconRight            },        },        "heroImage": statsImage{            "src": asset->url,            "alt": alt,        },        stats[]{            name,            value,        },    },    "testimonialData": testimonial->{        quote,        authorName,        organizationName,        "authorImageUrl": organizationLogo.asset->url,        "storySlug": customerStory->slug.current,    },}
export type SOLUTION_WITH_HREF_QUERYResult = Array<{
  id: string;
  name: string | null;
  href: string | null;
  comingSoon: boolean | null;
  heroData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  };
  featuresData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    mobileHeroView: boolean | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      iconUrl: string | null;
    }> | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    mobileHeroView: boolean | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      iconUrl: string | null;
    }> | null;
  };
  statsData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    stats: Array<{
      name: string | null;
      value: string | null;
    }> | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    stats: Array<{
      name: string | null;
      value: string | null;
    }> | null;
  };
  testimonialData: {
    quote: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }> | null;
    authorName: string | null;
    organizationName: string | null;
    authorImageUrl: string | null;
    storySlug: string | null;
  } | null;
}>;
// Source: ./src/sanity/lib/queries/splash.ts
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug)]
export type POSTS_QUERYResult = Array<{
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  type?: "Blog Post" | "Customer Story";
  title?: string;
  slug?: Slug;
  description?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  date?: string;
  datetime?: string;
  authorName?: string;
  authorImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  renderMDX?: string;
  otherDetails?: Array<{
    name?: string;
    description?: string;
    _key: string;
  }>;
}>;
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]
export type POST_QUERYResult = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  entryName?: string;
  isWorkInProgress?: boolean;
  type?: "Blog Post" | "Customer Story";
  title?: string;
  slug?: Slug;
  description?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  date?: string;
  datetime?: string;
  authorName?: string;
  authorImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  renderMDX?: string;
  otherDetails?: Array<{
    name?: string;
    description?: string;
    _key: string;
  }>;
} | null;
// Variable: SPLASH_PAGE_QUERY
// Query: *[_type == "splashPage"]{  "heroData": {    ...heroHeader->{      heading,       title,       highlightText,       titleSuffix,       description,       actions[]->{        name,         href,         icon,         primary,         external,         iconLeft,         iconRight      },    },    "heroImage": heroImage{      "src": asset->url,      "alt": alt,    },   },  "partnersLogoCloudsData": {    "title": partnersTitle,    "logos": partnersLogos[]{      "src": asset->url,      "alt": alt,    },  },  "featuresData": {    ...featuresHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },    "heroImage": featuresImage{      "src": asset->url,      "alt": alt,    },     features[]{      name,      description,      icon    },  },  "solutionsSection": {    ...solutionsHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },    solutions[]->{      name,      href,      description,      "image": previewImage{        "src": asset->url,        "alt": alt,      },       actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },  },  "tweetCardData": {    ...tweetCardHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },    tweetId,  },  "startupProgramsLogoCloudsData": {    "title": startupProgramsTitle,    "logos": startupProgramsLogos[]{      "src": asset->url,      "alt": alt,    },  },  "testimonialsData": {    ...testimonialsHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },      "featuredTestimonial": featuredTestimonial->{      "body": quote,      "author": {        "name": authorName,        "role": authorRole,            "org": organizationName,        "handle": socialHandle,        handleHref,        "imageUrl": authorAvatar.asset->url,        "logoUrl": organizationLogo.asset->url,      },    },    "testimonials": [      [        testimonialCol1[]->{          "body": quote,          "author": {            "name": authorName,            "role": authorRole,            "org": organizationName,            "handle": socialHandle,            handleHref,            "imageUrl": authorAvatar.asset->url,            "logoUrl": organizationLogo.asset->url,          },        },        testimonialCol2[]->{          "body": quote,          "author": {            "name": authorName,            "role": authorRole,            "org": organizationName,            "handle": socialHandle,            handleHref,            "imageUrl": authorAvatar.asset->url,            "logoUrl": organizationLogo.asset->url,          },        },      ],      [        testimonialCol3[]->{          "body": quote,          "author": {            "name": authorName,            "role": authorRole,            "org": organizationName,            "handle": socialHandle,            handleHref,            "imageUrl": authorAvatar.asset->url,            "logoUrl": organizationLogo.asset->url,          },        },        testimonialCol4[]->{          "body": quote,          "author": {            "name": authorName,            "role": authorRole,            "org": organizationName,            "handle": socialHandle,            handleHref,            "imageUrl": authorAvatar.asset->url,            "logoUrl": organizationLogo.asset->url,          },        },      ],    ],  },}
export type SPLASH_PAGE_QUERYResult = Array<{
  heroData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  };
  partnersLogoCloudsData: {
    title: string | null;
    logos: Array<{
      src: string | null;
      alt: string | null;
    }> | null;
  };
  featuresData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  };
  solutionsSection: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    solutions: Array<{
      name: string | null;
      href: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      image: {
        src: string | null;
        alt: string | null;
      } | null;
      actions: null;
    }> | null;
  } | {
    solutions: Array<{
      name: string | null;
      href: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      image: {
        src: string | null;
        alt: string | null;
      } | null;
      actions: null;
    }> | null;
  };
  tweetCardData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    tweetId: string | null;
  } | {
    tweetId: string | null;
  };
  startupProgramsLogoCloudsData: {
    title: string | null;
    logos: Array<{
      src: string | null;
      alt: string | null;
    }> | null;
  };
  testimonialsData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    featuredTestimonial: {
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
      author: {
        name: string | null;
        role: string | null;
        org: string | null;
        handle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        logoUrl: string | null;
      };
    } | null;
    testimonials: Array<Array<Array<{
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
      author: {
        name: string | null;
        role: string | null;
        org: string | null;
        handle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        logoUrl: string | null;
      };
    }> | null>>;
  } | {
    featuredTestimonial: {
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
      author: {
        name: string | null;
        role: string | null;
        org: string | null;
        handle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        logoUrl: string | null;
      };
    } | null;
    testimonials: Array<Array<Array<{
      body: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }> | null;
      author: {
        name: string | null;
        role: string | null;
        org: string | null;
        handle: string | null;
        handleHref: string | null;
        imageUrl: string | null;
        logoUrl: string | null;
      };
    }> | null>>;
  };
}>;
// Source: ./src/sanity/lib/queries/technology.ts
// Variable: TECHNOLOGY_PAGE_QUERY
// Query: *[_type == "technologyPage"]{  "heroData": {    ...technologyHeader->{      heading,       title,       highlightText,       titleSuffix,       description,       actions[]->{        name,         href,         icon,         primary,         external,         iconLeft,         iconRight      },    },    "heroImage": heroImage{      "src": asset->url,      "alt": alt,    },  },  "featuresData": {    ...featuresHeader->{      heading,      title,      highlightText,      titleSuffix,      description,      actions[]->{        name,        href,        icon,        primary,        external,        iconLeft,        iconRight      },    },    "heroImage": featuresImage{      "src": asset->url,      "alt": alt,    },     features[]{      name,      description,      "iconUrl": image.asset->url    },  },  "technologyData": {    ...techStackHeader->{        heading,        title,        highlightText,        titleSuffix,        description,        actions[]->{          name,          href,          icon,          primary,          external,          iconLeft,          iconRight        },      },      "features": technology[]{      name,      description,      icon    }  }}
export type TECHNOLOGY_PAGE_QUERYResult = Array<{
  heroData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
  };
  featuresData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      iconUrl: string | null;
    }> | null;
  } | {
    heroImage: {
      src: string | null;
      alt: string | null;
    } | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      iconUrl: string | null;
    }> | null;
  };
  technologyData: {
    heading: string | null;
    title: string | null;
    highlightText: string | null;
    titleSuffix: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
    actions: Array<{
      name: string | null;
      href: string | null;
      icon: string | null;
      primary: boolean | null;
      external: boolean | null;
      iconLeft: string | null;
      iconRight: string | null;
    }> | null;
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  } | {
    features: Array<{
      name: string | null;
      description: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }> | null;
      icon: string | null;
    }> | null;
  };
}>;
